QUICK HIERARCHICAL PARSING TEST
==================================================
Successfully parsed: test_files\test_python.py

LANGUAGE: PYTHON FILE: test_files/test_python.py
Top-level blocks: 41
Total blocks: 85
Nested blocks: 44

Structure:
├─ import: os
├─ import: sys
├─ import: typing
├─ import: dataclasses
├─ import: enum
├─ import: abc
├─ import: typing
├─ export: __all__
├─ variable: DATABASE_URL
├─ variable: API_VERSION
├─ variable: MAX_RETRIES
├─ variable: IS_DEBUG
├─ variable: name
├─ variable: age
├─ variable: city
├─ variable: first
├─ variable: second
├─ variable: CONFIG
├─ variable: items
├─ variable: square
├─ variable: T
├─ variable: __all__
├─ function: simple_function
├─ function: greet
├─ function: function_with_args
├─ function: async_function
├─ function: typed_function
├─ function: documented_function
├─ function: outer_function (1 children)
  └─ function: inner_function
├─ function: annotated_function
├─ class: Status (3 children)
  ├─ variable: PENDING
  ├─ variable: ACTIVE
  └─ variable: INACTIVE
├─ class: Priority (3 children)
  ├─ variable: LOW
  ├─ variable: MEDIUM
  └─ variable: HIGH
├─ class: Color (3 children)
  ├─ variable: RED
  ├─ variable: GREEN
  └─ variable: BLUE
├─ class: SimpleClass (3 children)
  ├─ function: __init__
  ├─ function: get_name
  └─ variable: name
├─ class: ChildClass (3 children)
  ├─ function: __init__
  ├─ function: get_info
  └─ variable: age
├─ class: MathUtils (6 children)
  ├─ function: __init__
  ├─ function: from_string
  ├─ function: add
  ├─ function: square
  ├─ variable: PI
  └─ variable: value
├─ class: Person (7 children)
  ├─ function: __init__
  ├─ function: full_name
  ├─ function: first_name
  ├─ function: first_name
  ├─ variable: first_name
  ├─ variable: last_name
  └─ variable: value
├─ class: Outer (5 children)
  ├─ function: __init__
  ├─ function: get_value
  ├─ function: __init__
  ├─ class: Inner
  └─ variable: value
├─ class: Shape (2 children)
  ├─ function: area
  └─ function: perimeter
├─ class: Rectangle (5 children)
  ├─ function: __init__
  ├─ function: area
  ├─ function: perimeter
  ├─ variable: width
  └─ variable: height
└─ class: Container (3 children)
  ├─ function: __init__
  ├─ function: get_item
  └─ variable: item
Successfully parsed: test_files\test_typescript.ts

LANGUAGE: TYPESCRIPT FILE: test_files/test_typescript.ts
Top-level blocks: 79
Total blocks: 149
Nested blocks: 70

Structure:
├─ import: readFileSync
├─ import: join
├─ import: util
├─ import: axios
├─ import: EventEmitter
├─ import: IncomingMessage
├─ export: DefaultExportClass (1 children)
  └─ variable: name
├─ export: default (1 children)
  └─ variable: EXPORTED_CONSTANT
├─ export: default (1 children)
  └─ variable: exportedVariable
├─ export: exportedFunction
├─ export: exportedAsyncFunction
├─ export: ExportedClass (1 children)
  └─ function: constructor
├─ export: ExportedInterface (2 children)
  ├─ variable: name
  └─ variable: value
├─ export: default
├─ export: Status
├─ export: Priority
├─ export: default
├─ export: default
├─ export: default
├─ export: default
├─ export: NestedInterface (1 children)
  └─ variable: value
├─ export: NestedClass (1 children)
  └─ function: constructor
├─ export: nestedFunction
├─ export: Status
├─ interface: SimpleInterface (2 children)
  ├─ variable: name
  └─ variable: age
├─ interface: ShapeInterface
├─ interface: GenericInterface (1 children)
  └─ variable: value
├─ interface: ExtendedInterface (1 children)
  └─ variable: email
├─ interface: MultipleExtendedInterface (2 children)
  ├─ variable: id
  └─ variable: description
├─ interface: OptionalInterface (3 children)
  ├─ variable: required
  ├─ variable: optional
  └─ variable: readOnly
├─ interface: MethodInterface
├─ interface: IndexInterface
├─ interface: CallableInterface (1 children)
  └─ variable: property
├─ interface: ConstructableInterface
├─ interface: ConditionalInterface (1 children)
  └─ variable: value
├─ interface: Lengthwise (1 children)
  └─ variable: length
├─ enum: Status
├─ enum: Priority
├─ enum: Color
├─ enum: ConstEnum
├─ enum: ComputedEnum
├─ variable: DATABASE_URL
├─ variable: API_VERSION
├─ variable: MAX_RETRIES
├─ variable: IS_DEBUG
├─ variable: CONFIG
├─ variable: someValue
├─ variable: strLength
├─ variable: items
├─ variable: map
├─ function: simpleFunction
├─ function: functionWithParams
├─ function: functionWithRestParams
├─ function: asyncFunction (1 children)
  └─ function: resolve
├─ function: asyncFunctionWithParams (1 children)
  └─ variable: response
├─ function: genericFunction
├─ function: multipleGenerics
├─ function: conditionalFunction
├─ function: arrowFunction
├─ function: arrowWithParams
├─ function: asyncArrowFunction
├─ function: genericArrowFunction (1 children)
  └─ function: item
├─ function: complexArrowFunction (3 children)
  ├─ function: item
  ├─ variable: processed
  └─ variable: count
├─ function: functionExpression
├─ function: namedFunctionExpression (1 children)
  └─ function: namedFunc
├─ function: higherOrderFunction
├─ function: overloadedFunction
├─ function: readonly
├─ function: methodDecorator (1 children)
  └─ variable: originalMethod
├─ function: constrainedGeneric
├─ class: SimpleClass (3 children)
  ├─ function: constructor
  ├─ function: getValue
  └─ variable: value
├─ class: ClassWithMethods (11 children)
  ├─ function: constructor
  ├─ function: getName
  ├─ function: getPrivateValue
  ├─ function: getProtectedValue
  ├─ function: staticMethod
  ├─ function: asyncMethod
  ├─ function: nameProperty
  ├─ function: nameProperty
  ├─ function: genericMethod
  ├─ variable: _name
  └─ variable: _privateValue
├─ class: InheritedClass (4 children)
  ├─ function: constructor
  ├─ function: getInfo
  ├─ function: getName
  └─ variable: value
├─ class: GenericClass (4 children)
  ├─ function: constructor
  ├─ function: addItem
  ├─ function: getItems
  └─ variable: items
├─ class: MultipleGenericsClass (3 children)
  ├─ function: constructor
  ├─ function: getFirst
  └─ function: getSecond
├─ class: ImplementationClass (3 children)
  ├─ function: constructor
  ├─ function: area
  └─ function: perimeter
├─ class: DecoratedClass (2 children)
  ├─ function: decoratedMethod
  └─ variable: name
├─ class: ModernClass (2 children)
  ├─ function: constructor
  └─ function: getPrivate
└─ class: ComplexClass (10 children)
  ├─ function: constructor
  ├─ function: getInstanceCount
  ├─ function: processValue
  ├─ function: displayName
  ├─ function: displayName
  ├─ function: generateSequence
  ├─ function: updateSettings
  ├─ variable: instances
  ├─ variable: id
  └─ variable: i

==================================================
Test completed!
